// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/08/2019 11:36:13"
                                                                                
// Verilog Test Bench template for design : I2C
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module I2C_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
wire treg_SDA;
reg clk;
reg [7:0] data;
reg dataReady;
reg [6:0] address;
reg rw;
// wires                                               
wire SCL;
wire SDA;

// assign statements (if any)                          
assign SDA = treg_SDA;
I2C i1 (
// port map - connection between master ports and signals/registers   
	.SCL(SCL),
	.SDA(SDA),
	.clk(clk),
	.address(address),
	.rw(rw),
	.data(data),
	.dataReady(dataReady)
);

assign treg_SDA = !i1.direction?1'b0:1'bz;

initial                                                
begin                                                  
clk <= 0;
dataReady <= 0;
address <= 7'b1010010;
rw <= 1'b0;
data <= 8'b11101000;
                                           
$display("Running testbench");

#20

dataReady <= 1;                      
end      
                                              
always                                                 
begin                                                  
	#5 clk <= !clk;
end    
                                                
endmodule

