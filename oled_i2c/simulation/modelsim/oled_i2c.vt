// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/04/2019 18:15:55"
                                                                                
// Verilog Test Bench template for design : oled_i2c
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module oled_i2c_vlg_tst();
// constants                                           
// test vector input registers
reg clk, dataReady, rst;
reg [7:0] data;
// wires                                               
wire scl;
wire treg_sda;
wire sda;
wire [3:0] CS, counter;

assign treg_sda = 1'bz;
assign sda = treg_sda;

oled_i2c i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.data(data),
	.dataReady(dataReady),
	.SCL(scl),
	.SDA(sda),
	.rst(rst)
);
initial                                                
begin                                                  

clk <= 0;
data <= 8'b11111111;
dataReady <= 0;
rst <= 0;

#5000

dataReady <= 1;
                                           
$display("Running testbench");              
end
                                                    
always #5 clk <= !clk;
                       

					  
endmodule

