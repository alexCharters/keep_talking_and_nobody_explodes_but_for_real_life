// Quartus Prime Verilog Template
// Simple Dual Port RAM with separate read/write addresses and
// single read/write clock

module dual_port_ram
#(parameter DATA_WIDTH=16, parameter ADDR_WIDTH=16)
(
	input [(DATA_WIDTH-1):0] data,
	input [(ADDR_WIDTH-1):0] write_addr,
	input [(ADDR_WIDTH-1):0] read_addr,
	input we, re, clk, en,
	output reg [(DATA_WIDTH-1):0] q
);

	// Declare the RAM variable
	reg [DATA_WIDTH-1:0] ram[2**ADDR_WIDTH-1:0];
	
	initial
	begin
		$readmemh("explode.dat", ram);
	end

	always @ (posedge clk)
	begin
		if(en) begin
			// Write
			if (we)
				ram[write_addr] <= data;

			// Read (if read_addr == write_addr, return OLD data).	To return
			// NEW data, use = (blocking write) rather than <= (non-blocking write)
			// in the write assignment.	 NOTE: NEW data may require extra bypass
			// logic around the RAM.
			if(re)
				q <= ram[read_addr];
		end
	end

endmodule
