// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/13/2019 17:43:21"
                                                                                
// Verilog Test Bench template for design : timer
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module timer_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clk;
reg [16:0] sec;
reg set;
// wires                                               
wire [16:0]  secLeft;
wire [6:0]  sevseg1;
wire [6:0]  sevseg2;
wire [6:0]  sevseg3;

// assign statements (if any)                          
timer #(300) i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.sec(sec),
	.secLeft(secLeft),
	.set(set),
	.sevseg1(sevseg1),
	.sevseg2(sevseg2),
	.sevseg3(sevseg3)
);
initial                                                
begin     
clk <= 0;                                             
set <= 1;
sec <= 300;
#30;
set <= 0;                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
	#5 clk <= !clk;
end                                                    
endmodule

